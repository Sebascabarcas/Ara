[33mcommit 59f98840af67dcf3c7ddf20cf7352e7f7ec5e80f[m
Author: Sebastian Cabarcas <sebascabarcas@gmail.com>
Date:   Sun Jun 18 20:57:27 2017 -0500

    Finish list of product and clients, edit products and erase product

[1mdiff --git a/.gitignore b/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/Config/config.js b/Config/config.js[m
[1mnew file mode 100644[m
[1mindex 0000000..45f851d[m
[1m--- /dev/null[m
[1m+++ b/Config/config.js[m
[36m@@ -0,0 +1,4 @@[m
[32m+[m[32mmodule.exports = {[m
[32m+[m[32m port : process.env.PORT || 3001,[m
[32m+[m[32m db : process.env.MONGODB || "mongodb://localhost:27017/ara",[m
[32m+[m[32m}[m
[1mdiff --git a/app.js b/app.js[m
[1mnew file mode 100644[m
[1mindex 0000000..bedea97[m
[1m--- /dev/null[m
[1m+++ b/app.js[m
[36m@@ -0,0 +1,41 @@[m
[32m+[m[32m'use strict'[m
[32m+[m
[32m+[m[32mconst express = require("express")[m
[32m+[m[32mconst bodyParser = require("body-parser")[m
[32m+[m[32mconst hbs = require("express-handlebars")[m
[32m+[m[32mconst ara = require("./routes")[m
[32m+[m
[32m+[m[32mconst app = express()[m
[32m+[m
[32m+[m[32mapp.use(bodyParser.urlencoded({extended: true})) // for parsing application/x-www-form-urlencoded[m
[32m+[m[32mapp.use(bodyParser.json()) // for parsing application/j)[m
[32m+[m
[32m+[m[32mapp.engine(".hbs", hbs({[m
[32m+[m[32m  defaultLayout: 'default',[m
[32m+[m[32m  extname: '.hbs'[m
[32m+[m[32m}))[m
[32m+[m[32mapp.set("view engine", ".hbs")[m
[32m+[m
[32m+[m[32mapp.use("/ara",ara)[m
[32m+[m[32mapp.get('/home', (req,res)=>{[m
[32m+[m[32m  res.render('home')[m
[32m+[m[32m})[m
[32m+[m[32mapp.get('/client', (req,res)=>{[m
[32m+[m[32m  res.render('client')[m
[32m+[m[32m})[m
[32m+[m[32mapp.get('/products', (req,res)=>{[m
[32m+[m[32m  res.render('product')[m
[32m+[m[32m})[m
[32m+[m[32mapp.get('/products/new', (req,res)=>{[m
[32m+[m[32m  res.render('productNew')[m
[32m+[m[32m})[m
[32m+[m[32mapp.get('/products/:cod', (req,res)=>{[m
[32m+[m[32m  res.render('productEdit')[m
[32m+[m[32m})[m
[32m+[m[32mapp.get('/bills', (req,res)=>{[m
[32m+[m[32m  res.render('bill')[m
[32m+[m[32m})[m
[32m+[m[32mapp.get('/shop', (req,res)=>{[m
[32m+[m[32m  res.render('shop')[m
[32m+[m[32m})[m
[32m+[m[32mmodule.exports = app[m
[1mdiff --git a/ara.png b/ara.png[m
[1mnew file mode 100644[m
[1mindex 0000000..d76ca18[m
Binary files /dev/null and b/ara.png differ
[1mdiff --git a/controllers/client.js b/controllers/client.js[m
[1mnew file mode 100644[m
[1mindex 0000000..6087dec[m
[1m--- /dev/null[m
[1m+++ b/controllers/client.js[m
[36m@@ -0,0 +1,86 @@[m
[32m+[m[32m'use strict'[m
[32m+[m
[32m+[m[32mconst Client = require("../models/client")[m
[32m+[m
[32m+[m[32mfunction getClient(req,res) {[m
[32m+[m[32m  let clientCed = req.params.clientCed[m
[32m+[m[32m  console.log(clientCed)[m
[32m+[m[32m    Client.find({ced: clientCed}, (err, client) =>{[m
[32m+[m[32m      if (err) res.status(500).send(`La peticiÃ³n no pudo ejecutarse: ${err}`)[m
[32m+[m
[32m+[m[32m      if (!client) res.status(404).send("No se encontrÃ³ el cliente")[m
[32m+[m[32m      res.status(200).send({client})[m
[32m+[m[32m    })[m
[32m+[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction getClients(req, res) {[m
[32m+[m
[32m+[m		[32mClient.find({}, (err,client)  => {[m
[32m+[m			[32mif (err) res.status(500).send(`La peticiÃ³n no pudo ejecutarse: ${err}`)[m
[32m+[m			[32mif (!client) res.status(404).send("No se encontrÃ³ el client")[m
[32m+[m
[32m+[m			[32mres.status(200).send({client})[m
[32m+[m	[32m})[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction updateClient (req, res){[m
[32m+[m		[32mlet clientCed = req.params.clientCed[m
[32m+[m	[32m  let update = req.body[m
[32m+[m
[32m+[m	[32m  Client.findOneAndUpdate({ ced: clientCed}, update, (err, clientUpdated) =>{[m
[32m+[m	[32m    if (err) res.status(500).send(`La peticiÃ³n no pudo ejecutarse: ${err}`)[m
[32m+[m
[32m+[m	[32m   res.status(200).send({client : clientUpdated})[m
[32m+[m	[32m  })[m
[32m+[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mfunction deleteClient(req, res) {[m
[32m+[m		[32mlet clientCed = req.params.clientCed[m
[32m+[m			[32mClient.findOneAndRemove({ced: clientCed}, (err, client) => {[m
[32m+[m				[32mif (err) res.status(500).send(`La peticiÃ³n no pudo ejecutarse: ${err}`)[m
[32m+[m[32m        console.log('hola')[m
[32m+[m[32m        console.log({client})[m
[32m+[m[32m        res.status(200).send({message : "El Cliente se ha eliminado"})[m
[32m+[m			[32m/*	client.remove(err =>{[m
[32m+[m					[32mif (err) res.status(500).send(`La peticiÃ³n no pudo ejecutarse: ${err}`)[m
[32m+[m					[32mres.status(200).send({message : "El Cliente se ha eliminado"})[m
[32m+[m				[32m})[m
[32m+[m[32m            */[m
[32m+[m			[32m})[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m[32m  function buy(req, res) {[m
[32m+[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m	[32mfunction saveClient(req, res) {[m
[32m+[m		[32mconsole.log("POST")[m
[32m+[m	[32m  console.log(req.body)[m
[32m+[m
[32m+[m	[32m  let client = new Client()[m
[32m+[m	[32m  client.ced = req.body.ced[m
[32m+[m	[32m  client.name = req.body.name[m
[32m+[m		[32mclient.cel = req.body.cel[m
[32m+[m[32m    client.address = req.body.address[m
[32m+[m[32m    client.email = req.body.email[m
[32m+[m[32m    client.points = 0[m
[32m+[m
[32m+[m
[32m+[m	[32m  client.save((err, clientStored) => {[m
[32m+[m	[32m    if (err)  res.status(500).send(`No se ha podido guardar el dato por el sgte error ${err}`)[m
[32m+[m	[32m//  console.log(String(err))}[m
[32m+[m	[32m    else res.status(200).send({client : clientStored})[m
[32m+[m
[32m+[m	[32m    })[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mmodule.exports = {[m
[32m+[m[32m   getClient,[m
[32m+[m	[32m getClients,[m
[32m+[m	[32m updateClient,[m
[32m+[m	[32m deleteClient,[m
[32m+[m	[32m saveClient[m
[32m+[m
[32m+[m	[32m}[m
[1mdiff --git a/controllers/product.js b/controllers/product.js[m
[1mnew file mode 100644[m
[1mindex 0000000..5cccea0[m
[1m--- /dev/null[m
[1m+++ b/controllers/product.js[m
[36m@@ -0,0 +1,80 @@[m
[32m+[m[32m'use strict'[m
[32m+[m
[32m+[m[32mconst Product = require("../models/product")[m
[32m+[m
[32m+[m[32mfunction getProduct(req,res) {[m
[32m+[m[32m  let productCod = req.params.cod[m
[32m+[m[32m  console.log(productCod)[m
[32m+[m[32m    Product.find({cod: productCod}, (err, product) =>{[m
[32m+[m[32m      if (err) res.status(500).send(`La peticiÃ³n no pudo ejecutarse: ${err}`)[m
[32m+[m
[32m+[m[32m      if (!product) res.status(404).send("No se encontrÃ³ el producte")[m
[32m+[m[32m      res.status(200).send({product})[m
[32m+[m[32m    })[m
[32m+[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction getProducts(req, res) {[m
[32m+[m
[32m+[m		[32mProduct.find({}, (err,product)  => {[m
[32m+[m			[32mif (err) res.status(500).send(`La peticiÃ³n no pudo ejecutarse: ${err}`)[m
[32m+[m			[32mif (!product) res.status(404).send("No se encontrÃ³ el product")[m
[32m+[m
[32m+[m			[32mres.status(200).send({product})[m
[32m+[m	[32m})[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction updateProduct (req, res){[m
[32m+[m[32m  console.log("PUT");[m
[32m+[m[32m  console.log(req.params.cod);[m
[32m+[m[32m  console.log(req.body);[m
[32m+[m		[32mlet productCod = req.params.cod[m
[32m+[m	[32m  let update = req.body[m
[32m+[m
[32m+[m	[32m  Product.findOneAndUpdate({cod : productCod}, update, (err, productUpdated) =>{[m
[32m+[m	[32m    if (err) res.status(500).send(`La peticiÃ³n no pudo ejecutarse: ${err}`)[m
[32m+[m
[32m+[m	[32m   res.status(200).send({product : productUpdated})[m
[32m+[m	[32m  })[m
[32m+[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mfunction deleteProduct(req, res) {[m
[32m+[m[32m    console.log(req.params.cod);[m
[32m+[m		[32mlet productCod = req.params.cod[m
[32m+[m			[32mProduct.findOneAndRemove({ cod: productCod}, (err, product) => {[m
[32m+[m				[32mif (err) res.status(500).send(`La peticiÃ³n no pudo ejecutarse: ${err}`)[m
[32m+[m
[32m+[m					[32mres.status(200).send({message : "EL Producto se ha eliminado"})[m
[32m+[m				[32m})[m
[32m+[m
[32m+[m			[32m}[m
[32m+[m
[32m+[m
[32m+[m	[32mfunction saveProduct(req, res) {[m
[32m+[m		[32mconsole.log("POST")[m
[32m+[m	[32m  console.log(req.params)[m
[32m+[m	[32m  console.log(req.body)[m
[32m+[m
[32m+[m	[32m  let product = new Product()[m
[32m+[m	[32m  product.cod = req.body.cod[m
[32m+[m	[32m  product.name = req.body.name[m
[32m+[m		[32mproduct.price = req.body.price[m
[32m+[m
[32m+[m	[32m  product.save((err, productStored) => {[m
[32m+[m	[32m    if (err)  res.status(500).send(`No se ha podido guardar el dato por el sgte error ${err}`)[m
[32m+[m	[32m//  console.log(String(err))}[m
[32m+[m	[32m    else res.status(200).send({product : productStored})[m
[32m+[m
[32m+[m	[32m    })[m
[32m+[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mmodule.exports = {[m
[32m+[m[32m   getProduct,[m
[32m+[m	[32m getProducts,[m
[32m+[m	[32m updateProduct,[m
[32m+[m	[32m deleteProduct,[m
[32m+[m	[32m saveProduct[m
[32m+[m
[32m+[m	[32m}[m
[1mdiff --git a/index.js b/index.js[m
[1mnew file mode 100644[m
[1mindex 0000000..7d3a5e1[m
[1m--- /dev/null[m
[1m+++ b/index.js[m
[36m@@ -0,0 +1,14 @@[m
[32m+[m[32m'use strict'[m
[32m+[m
[32m+[m[32mconst mongoose = require("mongoose")[m
[32m+[m[32mconst app = require("./app")[m
[32m+[m[32mconst config = require("./Config/config")[m
[32m+[m[32mmongoose.connect( config.db, (err, res) =>{[m
[32m+[m[32m  if (err) {[m
[32m+[m[32m    console.log(String(err))[m
[32m+[m[32m  }[m
[32m+[m[32m  console.log("Conectado a mongodb")[m
[32m+[m[32m  app.listen(config.port, (req, res) => {[m
[32m+[m[32m    console.log("Conectado correctamente")[m
[32m+[m[32m  } )[m
[32m+[m[32m})[m
[1mdiff --git a/models/bill.js b/models/bill.js[m
[1mnew file mode 100644[m
[1mindex 0000000..842f858[m
[1m--- /dev/null[m
[1m+++ b/models/bill.js[m
[36m@@ -0,0 +1,15 @@[m
[32m+[m[32m'use strict'[m
[32m+[m
[32m+[m[32mconst mongoose = require('mongoose')[m
[32m+[m[32mconst Schema = mongoose.Schema[m
[32m+[m[32mconst Product = require("../models/product")[m
[32m+[m
[32m+[m
[32m+[m[32mconst BillSchema = new Schema({[m
[32m+[m[32m client: {type: Number}[m
[32m+[m[32m products: [Product],[m
[32m+[m[32m date: { type: Date, default: Date.now},[m
[32m+[m[32m value: { type: Number, required: true}[m
[32m+[m[32m})[m
[32m+[m
[32m+[m[32mmodule.exports = mongoose.model("BillSchema", BillSchema)[m
[1mdiff --git a/models/client.js b/models/client.js[m
[1mnew file mode 100644[m
[1mindex 0000000..06ad304[m
[1m--- /dev/null[m
[1m+++ b/models/client.js[m
[36m@@ -0,0 +1,24 @@[m
[32m+[m[32m'use strict'[m
[32m+[m
[32m+[m[32mconst mongoose = require('mongoose')[m
[32m+[m[32mconst Schema = mongoose.Schema[m
[32m+[m
[32m+[m[32mfunction has3Letters(string) {[m
[32m+[m[32m  if (string.length >= 3) return true[m
[32m+[m[32m  return false[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction isCel(Number) {[m
[32m+[m[32m  if (Number.length==10)return true[m
[32m+[m[32m  return false[m
[32m+[m[32m}[m
[32m+[m[32mconst ClientSchema = new Schema({[m
[32m+[m[32m ced: {type: Number, unique: true, required: true },[m
[32m+[m[32m name: { type: String, required: true, validate: has3Letters},[m
[32m+[m[32m cel: {type: String, required: true, validate: isCel},[m
[32m+[m[32m address: {type: String, required: true},[m
[32m+[m[32m email: {type: String, required: true},[m
[32m+[m[32m points: {type: Number, default:0}[m
[32m+[m[32m})[m
[32m+[m
[32m+[m[32mmodule.exports = mongoose.model("Client", ClientSchema)[m
[1mdiff --git a/models/product.js b/models/product.js[m
[1mnew file mode 100644[m
[1mindex 0000000..89173bf[m
[1m--- /dev/null[m
[1m+++ b/models/product.js[m
[36m@@ -0,0 +1,13 @@[m
[32m+[m[32m'use strict'[m
[32m+[m
[32m+[m[32mconst mongoose = require('mongoose')[m
[32m+[m[32mconst Schema = mongoose.Schema[m
[32m+[m
[32m+[m
[32m+[m[32mconst ProductSchema = new Schema({[m
[32m+[m[32m cod: {type: Number, unique: true, required: true },[m
[32m+[m[32m name: { type: String, required: true},[m
[32m+[m[32m price: { type: Number, required: true}[m
[32m+[m[32m})[m
[32m+[m
[32m+[m[32mmodule.exports = mongoose.model("Product", ProductSchema)[m
[1mdiff --git a/package.json b/package.json[m
[1mnew file mode 100644[m
[1mindex 0000000..f093c8f[m
[1m--- /dev/null[m
[1m+++ b/package.json[m
[36m@@ -0,0 +1,25 @@[m
[32m+[m[32m{[m
[32m+[m[32m  "name": "ara",[m
[32m+[m[32m  "version": "1.0.0",[m
[32m+[m[32m  "description": "Sistema empresarial",[m
[32m+[m[32m  "main": "app.js",[m
[32m+[m[32m  "scripts": {[m
[32m+[m[32m    "test": "echo \"Error: no test specified\" && exit 1"[m
[32m+[m[32m  },[m
[32m+[m[32m  "repository": {[m
[32m+[m[32m    "type": "git",[m
[32m+[m[32m    "url": "git+https://github.com/Sebascabarcas/Ara.git"[m
[32m+[m[32m  },[m
[32m+[m[32m  "author": "sebascabarcas",[m
[32m+[m[32m  "license": "MIT",[m
[32m+[m[32m  "bugs": {[m
[32m+[m[32m    "url": "https://github.com/Sebascabarcas/Ara/issues"[m
[32m+[m[32m  },[m
[32m+[m[32m  "homepage": "https://github.com/Sebascabarcas/Ara#readme",[m
[32m+[m[32m  "dependencies": {[m
[32m+[m[32m    "body-parser": "^1.17.2",[m
[32m+[m[32m    "express": "^4.15.3",[m
[32m+[m[32m    "express-handlebars": "^3.0.0",[m
[32m+[m[32m    "mongoose": "^4.10.6"[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/routes/index.js b/routes/index.js[m
[1mnew file mode 100644[m
[1mindex 0000000..5116038[m
[1m--- /dev/null[m
[1m+++ b/routes/index.js[m
[36m@@ -0,0 +1,21 @@[m
[32m+[m[32m'use strict'[m
[32m+[m
[32m+[m[32mconst express = require("express")[m
[32m+[m[32m//const productCtrl = require("../controllers/product")[m
[32m+[m[32mconst clientCtrl = require("../controllers/client")[m
[32m+[m[32mconst productCtrl = require('../controllers/product')[m
[32m+[m[32mconst ara = express.Router()[m
[32m+[m[32m//const auth = require("../middlewares/auth")[m
[32m+[m[32mara.get("/client", clientCtrl.getClients)[m
[32m+[m[32mara.get("/client/:clientCed", clientCtrl.getClient)[m
[32m+[m[32mara.post("/client",  clientCtrl.saveClient)[m
[32m+[m[32mara.put("/client/:clientCed",  clientCtrl.updateClient)[m
[32m+[m[32mara.delete("/client/:clientCed", clientCtrl.deleteClient)[m
[32m+[m[32m//ara.post("/signup", userCtrl.signUp)[m
[32m+[m[32m//ara.post("/signin", userCtrl.signIn)[m
[32m+[m[32mara.get("/product", productCtrl.getProducts)[m
[32m+[m[32mara.get("/product/:cod", productCtrl.getProduct)[m
[32m+[m[32mara.post("/product",  productCtrl.saveProduct)[m
[32m+[m[32mara.put("/product/:cod",  productCtrl.updateProduct)[m
[32m+[m[32mara.delete("/product/:cod", productCtrl.deleteProduct)[m
[32m+[m[32mmodule.exports = ara[m
[1mdiff --git a/views/ara.png b/views/ara.png[m
[1mnew file mode 100644[m
[1mindex 0000000..d76ca18[m
Binary files /dev/null and b/views/ara.png differ
[1mdiff --git a/views/bill.hbs b/views/bill.hbs[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/views/client.hbs b/views/client.hbs[m
[1mnew file mode 100644[m
[1mindex 0000000..8e73fed[m
[1m--- /dev/null[m
[1m+++ b/views/client.hbs[m
[36m@@ -0,0 +1,39 @@[m
[32m+[m[32m<script type="text/javascript">[m
[32m+[m[32mlet clientList = document.createElement('ul')[m
[32m+[m[32m//let btt = document.createElement('button')[m
[32m+[m[32m//let textb = document.createTextNode("BUY")[m
[32m+[m[32m//btt.setAttribute("id","bton")[m
[32m+[m[32m//btt.appendChild(textb)[m
[32m+[m[32mfetch("/ara/client", {[m
[32m+[m[32m  method: 'GET'[m
[32m+[m
[32m+[m[32m}).then(res => res.json())[m
[32m+[m[32m.then(data => {[m
[32m+[m[32m  console.log(data.client);[m
[32m+[m[32m  //localStorage.setItem("clients",allclients)[m
[32m+[m[32m  data.client.map(client =>{[m
[32m+[m[32m    let name = document.createTextNode(client.name)[m
[32m+[m[32m    let space = document.createElement('p')[m
[32m+[m[32m    let textspace = document.createTextNode("Ced: "+client.ced)[m
[32m+[m[32m    let elem = document.createElement('li')[m
[32m+[m[32m    space.appendChild(textspace)[m
[32m+[m[32m    elem.appendChild(name)[m
[32m+[m[32m  //  document.body.appendChild(space)[m
[32m+[m[32m    clientList.appendChild(elem)[m
[32m+[m[32m    clientList.appendChild(space)[m
[32m+[m[32m  })[m
[32m+[m[32m  document.body.appendChild(clientList)[m
[32m+[m[32m  //document.body.insertBefore(clientList, btt)[m
[32m+[m
[32m+[m[32m  //console.log(data.client.length);[m
[32m+[m[32m/*  const List = document.getElementById("list")[m
[32m+[m[32m  console.log(List.length)[m
[32m+[m[32m  console.log(List.childNodes[0])[m
[32m+[m[32m  for (var i = List.length-1; i >= 0; i--) {[m
[32m+[m[32m    let space = document.createElement('input')[m
[32m+[m[32m    space.setAttribute("type","value")[m
[32m+[m[32m    space.setAttribute("value", "Â¿How many?")[m
[32m+[m[32m    List.insertBefore(space,List.childNodes[i])[m
[32m+[m[32m  }*/[m
[32m+[m[32m})[m
[32m+[m[32m</script>[m
[1mdiff --git a/views/home.hbs b/views/home.hbs[m
[1mnew file mode 100644[m
[1mindex 0000000..bf2f6b6[m
[1m--- /dev/null[m
[1m+++ b/views/home.hbs[m
[36m@@ -0,0 +1,30 @@[m
[32m+[m
[32m+[m
[32m+[m[32m <input id= "Client" class="buttons" type="button" name="client" value="Clients">[m
[32m+[m[32m <br></br>[m
[32m+[m[32m <input id= "Product" class="buttons" type="button" name="products"  value="Products">[m
[32m+[m[32m <br></br>[m
[32m+[m[32m <input id= "Bill" class="buttons"  type="button" name="bills" value="Bills">[m
[32m+[m[32m <br></br>[m
[32m+[m[32m <input id="Purchase" class="buttons"  type="button" name="shop" value="Purchase">[m
[32m+[m
[32m+[m[32m<script type="text/javascript">[m
[32m+[m
[32m+[m[32mconst buttons =document.querySelectorAll('.buttons')[m
[32m+[m[32mconsole.log(buttons)[m
[32m+[m[32mbuttons.forEach(addEvent)[m
[32m+[m[32mfunction addEvent(element) {[m
[32m+[m[32m  element.addEventListener('click', event=>{[m
[32m+[m[32m    window.location="http://localhost:3001/"+element.name[m
[32m+[m[32m  })[m
[32m+[m[32m}[m
[32m+[m[32m/*[m
[32m+[m[32mfor (var i = 0; i < buttons.length; i++) {[m
[32m+[m[32m   const dir= buttons[i].name[m
[32m+[m[32m  buttons[i].addEventListener('click', event=>{[m
[32m+[m[32m   console.log(dir)[m
[32m+[m[32m    window.location="http://localhost:3001/"+dir[m
[32m+[m[32m  })*/[m
[32m+[m
[32m+[m
[32m+[m[32m</script>[m
[1mdiff --git a/views/layouts/ara.jpg b/views/layouts/ara.jpg[m
[1mnew file mode 100644[m
[1mindex 0000000..f7e626d[m
Binary files /dev/null and b/views/layouts/ara.jpg differ
[1mdiff --git a/views/layouts/ara.png b/views/layouts/ara.png[m
[1mnew file mode 100644[m
[1mindex 0000000..d76ca18[m
Binary files /dev/null and b/views/layouts/ara.png differ
[1mdiff --git a/views/layouts/default.hbs b/views/layouts/default.hbs[m
[1mnew file mode 100644[m
[1mindex 0000000..3f6d1a9[m
[1m--- /dev/null[m
[1m+++ b/views/layouts/default.hbs[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32m<!DOCTYPE html>[m
[32m+[m[32m<html>[m
[32m+[m[32m  <head>[m
[32m+[m[32m    <meta charset="utf-8">[m
[32m+[m[32m    <title>Ara supermarket</title>[m
[32m+[m[32m  </head>[m
[32m+[m[32m  <body>[m
[32m+[m[32m<style type = "text/css">[m
[32m+[m[32m  body {[m
[32m+[m[41m  [m
[32m+[m[32m     background-color:#cccccc;[m
[32m+[m
[32m+[m[32m  }[m
[32m+[m[32m  </style>[m
[32m+[m[32m  {{{body}}}[m
[32m+[m[32m  </body>[m
[32m+[m[32m</html>[m
[1mdiff --git a/views/product.hbs b/views/product.hbs[m
[1mnew file mode 100644[m
[1mindex 0000000..0efbb2c[m
[1m--- /dev/null[m
[1m+++ b/views/product.hbs[m
[36m@@ -0,0 +1,55 @@[m
[32m+[m[32m<button id="newproduct" type="button" name="button">New product</button>[m
[32m+[m[32m<script type="text/javascript">[m
[32m+[m[32mconst pbutton = document.querySelector("#newproduct")[m
[32m+[m[32mpbutton.addEventListener("click", event =>{[m
[32m+[m[32m  window.location="http://localhost:3001/products/new"[m
[32m+[m[32m})[m
[32m+[m
[32m+[m[32mlet productList = document.createElement('ul')[m
[32m+[m[32mfetch("/ara/product", {[m
[32m+[m[32m  method: 'GET'[m
[32m+[m
[32m+[m[32m}).then(res => res.json())[m
[32m+[m[32m.then(data => {[m
[32m+[m[32m  data.product.map(product =>{[m
[32m+[m[32m    let name = document.createTextNode(product.name)[m
[32m+[m[32m    let elem = document.createElement('li')[m
[32m+[m[32m    let tedit = document.createTextNode("Edit")[m
[32m+[m[32m    let edit = document.createElement('button')[m
[32m+[m[32m    let terase = document.createTextNode("Erase")[m
[32m+[m[32m    let erase = document.createElement('button')[m
[32m+[m[32m    elem.appendChild(name)[m
[32m+[m[32m    edit.setAttribute("class","edit")[m
[32m+[m[32m    edit.setAttribute("id",product.cod)[m
[32m+[m[32m    erase.setAttribute("class","erase")[m
[32m+[m[32m    erase.setAttribute("id",product.cod)[m
[32m+[m[32m    edit.appendChild(tedit)[m
[32m+[m[32m    erase.appendChild(terase)[m
[32m+[m[32m    productList.appendChild(elem)[m
[32m+[m[32m    productList.appendChild(edit)[m
[32m+[m[32m    productList.appendChild(erase)[m
[32m+[m[32m  })[m
[32m+[m[32m  document.body.appendChild(productList)[m
[32m+[m[32m  const editbuttons= document.querySelectorAll(".edit")[m
[32m+[m[32m  const erasebuttons= document.querySelectorAll(".erase")[m
[32m+[m[32m  editbuttons.forEach(addEvente)[m
[32m+[m[32m  function addEvente(element) {[m
[32m+[m[32m    element.addEventListener('click', event=>{[m
[32m+[m[32m      window.location="http://localhost:3001/products/"+element.id[m
[32m+[m[32m    })[m
[32m+[m[32m  }[m
[32m+[m[32m  erasebuttons.forEach(addEvent)[m
[32m+[m[32m  function addEvent(element) {[m
[32m+[m[32m    element.addEventListener('click', event=>{[m
[32m+[m[32m      //event.preventDefault();[m
[32m+[m[32m      fetch("/ara/product/"+element.id, {[m
[32m+[m[32m      method: 'DELETE',[m
[32m+[m
[32m+[m[32m    }).then(res => res.json())[m
[32m+[m[32m    .then((json) => window.location="http://localhost:3001/products")[m
[32m+[m[32m    })[m
[32m+[m[32m    }[m
[32m+[m[32m  })[m
[32m+[m
[32m+[m
[32m+[m[32m</script>[m
[1mdiff --git a/views/productEdit.hbs b/views/productEdit.hbs[m
[1mnew file mode 100644[m
[1mindex 0000000..51a78c2[m
[1m--- /dev/null[m
[1m+++ b/views/productEdit.hbs[m
[36m@@ -0,0 +1,82 @@[m
[32m+[m[32m<form id="pedit">[m
[32m+[m[32m    <input id="press" type="submit"  value="Press">[m
[32m+[m[32m</form>[m
[32m+[m[32m<script type="text/javascript">[m
[32m+[m[32m  const pedit = document.querySelector("#pedit")[m
[32m+[m[32m  const Url = document.baseURI.split("/")[m
[32m+[m[32m  const productCod = Url[4][m
[32m+[m
[32m+[m[32m  //const sendbtt = document.querySelector("#submit")[m
[32m+[m[32m  const pressbtt = document.querySelector("#press")[m
[32m+[m
[32m+[m[32m  pressbtt.addEventListener("click", event=>{[m
[32m+[m[32m    event.preventDefault()[m
[32m+[m[32m    fetch("/ara/product/"+productCod, {[m
[32m+[m[32m      method: 'GET',[m
[32m+[m
[32m+[m[32m    }).then(res => res.json())[m
[32m+[m[32m    .then(data => {[m
[32m+[m[32m      //console.log(data.product[0].cod);[m
[32m+[m[32m      let icod = document.createElement("input")[m
[32m+[m[32m      icod.setAttribute("id", "cod")[m
[32m+[m[32m      icod.setAttribute("type","text")[m
[32m+[m[32m      icod.setAttribute("require","true")[m
[32m+[m[32m      icod.setAttribute("value",data.product[0].cod)[m
[32m+[m[32m      let iname = document.createElement("input")[m
[32m+[m[32m      iname.setAttribute("id", "name")[m
[32m+[m[32m      iname.setAttribute("type","text")[m
[32m+[m[32m      iname.setAttribute("require","true")[m
[32m+[m[32m      iname.setAttribute("value",data.product[0].name)[m
[32m+[m[32m      let iprice = document.createElement("input")[m
[32m+[m[32m      iprice.setAttribute("id", "price")[m
[32m+[m[32m      iprice.setAttribute("type","text")[m
[32m+[m[32m      iprice.setAttribute("require","true")[m
[32m+[m[32m      iprice.setAttribute("value",data.product[0].price)[m
[32m+[m[32m      let isubmit = document.createElement("input")[m
[32m+[m[32m        isubmit.setAttribute("type", "submit")[m
[32m+[m[32m        isubmit.setAttribute("value", "Submit")[m
[32m+[m[32m        pedit.appendChild(isubmit)[m
[32m+[m[32m      pedit.insertBefore(icod,isubmit)[m
[32m+[m[32m      pedit.insertBefore(iname,isubmit)[m
[32m+[m[32m      pedit.insertBefore(iprice,isubmit)[m
[32m+[m[32m      pressbtt.parentNode.removeChild(pressbtt)[m
[32m+[m[32m      isubmit.addEventListener("click", event=>{[m
[32m+[m[32m          event.preventDefault()[m
[32m+[m[32m        fetch("/ara/product/"+ productCod, {[m
[32m+[m[32m          method: 'PUT',[m
[32m+[m[32m          body: JSON.stringify({[m
[32m+[m[32m            cod: parseInt(document.querySelector("#cod").value),[m
[32m+[m[32m            name: document.querySelector("#name").value,[m
[32m+[m[32m            price: parseInt(document.querySelector("#price").value)[m
[32m+[m
[32m+[m[32m          }),[m
[32m+[m[32m          headers:{[m
[32m+[m[32m            "Content-Type": "application/json"[m
[32m+[m[32m          },[m
[32m+[m[32m        }).then(res => res.json())[m
[32m+[m[32m        .then((json) => window.location="http://localhost:3001/products")[m
[32m+[m[32m      })[m
[32m+[m[32m    })[m
[32m+[m
[32m+[m[32m  })[m
[32m+[m[32m  //const formLogin = document.querySelector('#put')[m
[32m+[m[32m  //const formData = new FormData(formLogin)[m
[32m+[m[32m  /*sendbtt.addEventListener("click", event=>{[m
[32m+[m[32m      event.preventDefault()[m
[32m+[m[32m    fetch("/ara/product/"+ productCod, {[m
[32m+[m[32m      method: 'PUT',[m
[32m+[m[32m      body: JSON.stringify({[m
[32m+[m[32m        cod: parseInt(document.querySelector("#cod").value),[m
[32m+[m[32m        name: document.querySelector("#name").value,[m
[32m+[m[32m        price: parseInt(document.querySelector("#price").value)[m
[32m+[m
[32m+[m[32m      }),[m
[32m+[m[32m      headers:{[m
[32m+[m[32m        "Content-Type": "application/json"[m
[32m+[m[32m      },[m
[32m+[m[32m    }).then(res => res.json())[m
[32m+[m[32m    .then((json) => window.location="http://localhost:3001/products")[m
[32m+[m[32m  })*/[m
[32m+[m
[32m+[m
[32m+[m[32m</script>[m
[1mdiff --git a/views/productNew.hbs b/views/productNew.hbs[m
[1mnew file mode 100644[m
[1mindex 0000000..3805b2a[m
[1m--- /dev/null[m
[1m+++ b/views/productNew.hbs[m
[36m@@ -0,0 +1,28 @@[m
[32m+[m[32m<form  method="post">[m
[32m+[m
[32m+[m[32m  <input id="cod" type="text" name="cod" placeholder="Product cod"  required="true">[m
[32m+[m[32m  <input id="name"type="text" name="name" placeholder="Product name" required="true">[m
[32m+[m[32m  <input id="price"type="text" name="price" placeholder="Product price" required="true">[m
[32m+[m[32m  <input id="submit" type="submit"  value="Submit">[m
[32m+[m[32m</form>[m
[32m+[m[32m<script type="text/javascript">[m
[32m+[m[32mconst sendbtt = document.querySelector("#submit")[m
[32m+[m[32m//const formLogin = document.querySelector('#put')[m
[32m+[m[32m//const formData = new FormData(formLogin)[m
[32m+[m[32msendbtt.addEventListener("click", event=>{[m
[32m+[m[32m  fetch("/ara/product", {[m
[32m+[m[32m  method: 'POST',[m
[32m+[m[32m  body: JSON.stringify({[m
[32m+[m[32m    cod: parseInt(document.querySelector("#cod").value),[m
[32m+[m[32m    name: document.querySelector("#name").value,[m
[32m+[m[32m    price: parseInt(document.querySelector("#price").value)[m
[32m+[m
[32m+[m[32m  }),[m
[32m+[m[32m  headers:{[m
[32m+[m[32m    "Content-Type": "application/json"[m
[32m+[m[32m  }[m
[32m+[m[32m}).then(res => res.json())[m
[32m+[m[32m.then((json) => window.location="http://localhost:3001/products")[m
[32m+[m[32m})[m
[32m+[m
[32m+[m[32m</script>[m
[1mdiff --git a/views/shop.hbs b/views/shop.hbs[m
[1mnew file mode 100644[m
[1mindex 0000000..7a5688a[m
[1m--- /dev/null[m
[1m+++ b/views/shop.hbs[m
[36m@@ -0,0 +1,72 @@[m
[32m+[m[32m<script type="text/javascript">[m
[32m+[m[32mlet productList = document.createElement('ul')[m
[32m+[m[32mlet btt = document.createElement('button')[m
[32m+[m[32mlet textb = document.createTextNode("BUY")[m
[32m+[m[32mbtt.setAttribute("id","bton")[m
[32m+[m[32mbtt.appendChild(textb)[m
[32m+[m[32mfetch("/ara/product", {[m
[32m+[m[32m  method: 'GET'[m
[32m+[m
[32m+[m[32m}).then(res => res.json())[m
[32m+[m[32m.then(data => {[m
[32m+[m
[32m+[m[32m  console.log(data.product);[m
[32m+[m[32m  //localStorage.setItem("products",allproducts)[m
[32m+[m[32m  data.product.map(product =>{[m
[32m+[m[32m    let name = document.createTextNode(product.name)[m
[32m+[m[32m    let elem = document.createElement('li')[m
[32m+[m[32m    let space = document.createElement('input')[m
[32m+[m[32m    space.setAttribute("type","value")[m
[32m+[m[32m    space.setAttribute("placeHolder", "Â¿How many?")[m
[32m+[m[32m  //  space.setAttribute("value", "0")[m
[32m+[m[32m    space.setAttribute("id",""+product.name)[m
[32m+[m[32m    elem.appendChild(name)[m
[32m+[m[32m  //  document.body.appendChild(space)[m
[32m+[m[32m    productList.appendChild(elem)[m
[32m+[m[32m    productList.appendChild(space)[m
[32m+[m[32m  })[m
[32m+[m[32m  document.body.insertBefore(productList, btt)[m
[32m+[m
[32m+[m[32m  console.log(data.product.length);[m
[32m+[m[32m/*  const List = document.getElementById("list")[m
[32m+[m[32m  console.log(List.length)[m
[32m+[m[32m  console.log(List.childNodes[0])[m
[32m+[m[32m  for (var i = List.length-1; i >= 0; i--) {[m
[32m+[m[32m    let space = document.createElement('input')[m
[32m+[m[32m    space.setAttribute("type","value")[m
[32m+[m[32m    space.setAttribute("value", "Â¿How many?")[m
[32m+[m[32m    List.insertBefore(space,List.childNodes[i])[m
[32m+[m[32m  }*/[m
[32m+[m[32m})[m
[32m+[m[32mdocument.body.appendChild(btt)[m
[32m+[m[32mdocument.querySelector("#bton").addEventListener("click", event=>{[m
[32m+[m[32m  fetch("/ara/product", {[m
[32m+[m[32m    method: 'GET'[m
[32m+[m
[32m+[m[32m  }).then(res => res.json())[m
[32m+[m[32m  .then(data => {[m
[32m+[m[32m    const verif = false[m
[32m+[m[32m    const allproducts=data.product[m
[32m+[m[32m    const totalp = new Array()[m
[32m+[m[32m    //const val =document.querySelector("#"+allproducts[0].name).value[m
[32m+[m[32m  //  const totalp = 0[m
[32m+[m[32m    //console.log(typeof totalp);[m
[32m+[m
[32m+[m[32m    for (var i = 0; i < allproducts.length; i++) {[m
[32m+[m[32m      const val =document.querySelector("#"+allproducts[i].name).value[m
[32m+[m[32m      if (!val) {[m
[32m+[m[32m        totalp.push(0)[m
[32m+[m
[32m+[m[32m      }else{[m
[32m+[m[32m       totalp.push(parseInt(val))}[m
[32m+[m[32m    // if (document.querySelector("#"+allproducts[i].name)) {[m
[32m+[m[32m    //   totalp =parseInt(document.querySelector("#"+allproducts[i].name).value)[m
[32m+[m
[32m+[m[32m    // }[m
[32m+[m[32m    }[m
[32m+[m[32m    console.log(totalp);[m
[32m+[m[32m  })[m
[32m+[m[32m})[m
[32m+[m
[32m+[m[32m//console.log(allproducts.length)[m
[32m+[m[32m</script>[m
